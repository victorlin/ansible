# test code for the git module
# (c) 2014, James Tanner <tanner.jc@gmail.com>

# This file is part of Ansible
#
# Ansible is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Ansible is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.

- name: set role facts
  set_fact:
    checkout_dir: '{{ output_dir }}/git'
    repo_format1: 'https://github.com/jimi-c/test_role'
    repo_format2: 'git@github.com:jimi-c/test_role.git'
    repo_format3: 'ssh://git@github.com/jimi-c/test_role.git'
    known_host_files:
      - "{{ lookup('env','HOME') }}/.ssh/known_hosts"
      - '/etc/ssh/ssh_known_hosts'

- name: clean out the output_dir
  shell: rm -rf {{ output_dir }}/*

- name: verify that git is installed so this test can continue
  shell: which git

#
# Test repo=https://github.com/...
#

- name: initial checkout
  git: repo={{ repo_format1 }} dest={{ checkout_dir }}
  register: git_result

- name: verify information about the initial clone
  assert:
    that:
      - "'before' in git_result"
      - "'after' in git_result"
      - "not git_result.before"
      - "git_result.changed"

- name: repeated checkout
  git: repo={{ repo_format1 }} dest={{ checkout_dir }}
  register: git_result2

- name: check for tags
  stat: path={{ checkout_dir }}/.git/refs/tags
  register: tags

- name: check for HEAD
  stat: path={{ checkout_dir }}/.git/HEAD
  register: head

- name: check for remotes
  stat: path={{ checkout_dir }}/.git/branches
  register: branches

- name: assert presense of tags/trunk/branches
  assert:
    that:
      - "tags.stat.isdir"
      - "head.stat.isreg"
      - "branches.stat.isdir"

- name: verify on a reclone things are marked unchanged
  assert:
    that:
      - "not git_result2.changed"

#
# Test repo=git@github.com:/...
# Requires variable: github_ssh_private_key
#

- name: clear checkout_dir
  file: state=absent path={{ checkout_dir }}

- name: remove known_host files
  file: state=absent path={{ item }}
  with_items: known_host_files

- name: checkout ssh://git@github.com repo without accept_hostkey (expected fail)
  git: repo={{ repo_format2 }} dest={{ checkout_dir }}
  register: git_result
  ignore_errors: true

- assert:
    that:
      - 'git_result.failed'
      - 'git_result.msg == "github.com has an unknown hostkey. Set accept_hostkey to True or manually add the hostkey prior to running the git module"'

- name: checkout git@github.com repo with accept_hostkey (expected pass)
  git:
    repo: '{{ repo_format2 }}'
    dest: '{{ checkout_dir }}'
    accept_hostkey: true
    key_file: '{{ github_ssh_private_key }}'
  register: git_result
  when: github_ssh_private_key is defined

- assert:
    that:
      - 'git_result.changed'
  when: not git_result|skipped

#
# Test repo=ssh://git@github.com/...
# Requires variable: github_ssh_private_key
#

- name: clear checkout_dir
  file: state=absent path={{ checkout_dir }}

- name: checkout ssh://git@github.com repo with accept_hostkey (expected pass)
  git:
    repo: '{{ repo_format3 }}'
    dest: '{{ checkout_dir }}'
    version: 'master'
    accept_hostkey: false # should already have been accepted
    key_file: '{{ github_ssh_private_key }}'
  register: git_result
  when: github_ssh_private_key is defined

- assert:
    that:
      - 'git_result.changed'
  when: not git_result|skipped
